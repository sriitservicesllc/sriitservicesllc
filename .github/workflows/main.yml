# GitHub Actions Workflow for Java CI with Maven, Docker, and ArgoCD
#
# REQUIRED SECRETS:
# 1. DOCKER_PASSWORD: Your Docker Hub password (or token) for pushing images.
#    Go to Repository Settings > Secrets and variables > Actions > New repository secret.
#
# 2. MANIFEST_REPO_PAT: A Personal Access Token (PAT) with 'repo' scope if your
#    Kubernetes manifest repository is private or requires specific push permissions.
#    The user associated with the PAT must have write access to the manifest repository.
#    Go to Repository Settings > Secrets and variables > Actions > New repository secret.
#
# NOTES ON ENV VARIABLES:
# - DOCKER_USERNAME: Set in the 'env' section. Replace 'your-docker-username'
#   with your actual Docker Hub username.
# - IMAGE_NAME: Set in the 'env' section. Replace 'your-app-name' with your
#   desired application image name.
# - MANIFEST_REPO_OWNER/NAME: In the 'Checkout Manifest Repository' step, replace
#   'your-manifest-repo-owner/your-manifest-repo-name' with the actual path to your manifest repository.
# - MANIFEST FILE PATH: In the 'Update Kubernetes Manifest' step, adjust the path
#   './manifests/k8s/deployment.yaml' and the 'sed' command if your manifest file
#   is located elsewhere or has a different image key structure.
#
name: Java CI with Maven, Docker, and ArgoCD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOCKER_USERNAME: your-docker-username # TODO: Replace with your Docker Hub username or use secrets.DOCKER_USERNAME
  IMAGE_NAME: your-app-name # TODO: Replace with your desired image name

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Allow reading contents (checkout)
      packages: write # Allow pushing packages (docker images)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin' # Popular distribution of OpenJDK

      # (Optional but recommended for multi-platform builds)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} # Needs to be configured in repository secrets

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha # Use Git SHA as a tag
            type=raw,value=latest,enable={{is_default_branch}} # Tag 'latest' only on default branch (main)

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the root of the repository
          push: true # Push the image
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha # Enable GitHub Actions cache for Docker layers
          cache-to: type=gha,mode=max

      - name: Checkout Manifest Repository
        uses: actions/checkout@v4
        with:
          repository: your-manifest-repo-owner/your-manifest-repo-name # TODO: Replace with your manifest repo
          path: ./manifests # Checkout to a 'manifests' subdirectory
          token: ${{ secrets.MANIFEST_REPO_PAT }} # Needs PAT with push access to the manifest repo

      - name: Update Kubernetes Manifest
        run: |
          echo "Updating manifest with image: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          # TODO: Adjust the path and sed command according to your manifest structure
          # This example assumes your image is set like: image: your-docker-username/your-app-name:some-tag
          # and the deployment file is at 'k8s/deployment.yaml' within the manifest repo checkout
          sed -i "s|image: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:.*|image: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g" ./manifests/k8s/deployment.yaml

      - name: Commit and Push Manifest Changes
        run: |
          cd ./manifests
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions-bot@github.com'
          git add .
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit to the manifest repository."
          else
            git commit -m "Update image to ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
            git push
          fi
          cd .. # Return to the original directory
